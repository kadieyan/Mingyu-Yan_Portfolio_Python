Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 （Id）
ii. Hours = 1,562 (Business_Id)
iii. Category = 2,643 (Business_Id)
iv. Attribute = 1,115 (Business_Id)
v. Review = 10,000 (Id)
vi. Checkin = 493 (Business_Id)
vii. Photo = 10,000 （Id）
viii. Tip = 3,979 (Business_Id)
ix. User = 10,000 （Id）
x. Friend = 11 （user_Id）
xi. Elite_years = 2,780 （user_Id）

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

SELECT *
FROM user
WHERE id IS NULL OR 
  name IS NULL OR 
  review_count IS NULL OR 
  yelping_since IS NULL OR
  useful IS NULL OR 
  funny IS NULL OR 
  cool IS NULL OR 
  fans IS NULL OR 
  average_stars IS NULL OR 
  compliment_hot IS NULL OR 
  compliment_more IS NULL OR 
  compliment_profile IS NULL OR 
  compliment_cute IS NULL OR 
  compliment_list IS NULL OR 
  compliment_note IS NULL OR 
  compliment_plain IS NULL OR 
  compliment_cool IS NULL OR 
  compliment_funny IS NULL OR 
  compliment_writer IS NULL OR 
  compliment_photos IS NULL 
;	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1 		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT
city
,SUM(review_count) AS total_review
FROM business
GROUP BY city
ORDER BY total_review DESC
;
	
	
	Copy and Paste the Result Below:
	
+-----------------+--------------+
| city            | total_review |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montréal        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
stars
,SUM(review_count) AS count
FROM business
WHERE city = 'Avon'
GROUP BY stars
;


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT
stars
,SUM(review_count) AS count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars
;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT
name
,review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
;	
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

Yes, more reviews correlate with more fans. 
From the two table results we get from ordering the user data by review_count and fans, 
we found 5 people that ranked in top 10 review_count list are also in the top 10 fans list.
Thus, we can conclude that post more reviews will in some way help user to get more fans.


i. order by review_count:

SELECT
name
,review_count
,fans
FROM user
ORDER BY review_count DESC
LIMIT 10
;
	
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
+-----------+--------------+------+

ii. order by fans:

SELECT
name
,review_count
,fans
FROM user
ORDER BY fans DESC
LIMIT 10
;	

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
+-----------+--------------+------+


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: 
There are more review with the word 'love'(1,780) than with word 'hate'(232).

	SQL code used to arrive at answer:

SELECT COUNT(*)								
FROM review
WHERE text LIKE "%love%"
;

+----------+
| COUNT(*) |
+----------+
|     1780 |
+----------+

SELECT COUNT(*)								
FROM review
WHERE text LIKE "%hate%"
;

+----------+
| COUNT(*) |
+----------+
|      232 |
+----------+
		
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT
name
,SUM(fans) AS fans
FROM user
GROUP BY id
ORDER BY fans DESC
LIMIT 10
;
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

City: Toronto
Category: Food
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, businesses with lower star rating usually have early open time than business with higher rating.
From the tables below, businesses with 2-3 stars all open at 8:00, but business with 4-5 stars will open no early than 11:00.

+----------------------+-------+-------+
| hours                | stars | count |
+----------------------+-------+-------+
| Friday|8:00-22:00    |   2.5 |     1 |
| Monday|8:00-22:00    |   2.5 |     1 |
| Saturday|8:00-22:00  |   2.5 |     1 |
| Sunday|8:00-22:00    |   2.5 |     1 |
| Thursday|8:00-22:00  |   2.5 |     1 |
| Tuesday|8:00-22:00   |   2.5 |     1 |
| Wednesday|8:00-22:00 |   2.5 |     1 |
+----------------------+-------+-------+

+----------------------+-------+-------+
| hours                | stars | count |
+----------------------+-------+-------+
| Friday|15:00-21:00   |   4.0 |     1 |
| Friday|18:00-2:00    |   4.5 |     1 |
| Monday|16:00-2:00    |   4.5 |     1 |
| Saturday|11:00-21:00 |   4.0 |     1 |
| Saturday|16:00-2:00  |   4.5 |     1 |
| Sunday|11:00-21:00   |   4.0 |     1 |
| Sunday|16:00-2:00    |   4.5 |     1 |
| Thursday|15:00-21:00 |   4.0 |     1 |
| Thursday|18:00-2:00  |   4.5 |     1 |
| Tuesday|15:00-21:00  |   4.0 |     1 |
+----------------------+-------+-------+

ii. Do the two groups you chose to analyze have a different number of reviews?

The group with higher rating have more review(26+15) than group with lower rating(10).

+---------+---------+----------+-------+--------------+
| name    | city    | category | stars | review_count |
+---------+---------+----------+-------+--------------+
| Loblaws | Toronto | Food     |   2.5 |           10 |
+---------+---------+----------+-------+--------------+

+--------------+---------+----------+-------+--------------+
| name         | city    | category | stars | review_count |
+--------------+---------+----------+-------+--------------+
| Cabin Fever  | Toronto | Food     |   4.5 |           26 |
| Halo Brewery | Toronto | Food     |   4.0 |           15 |
+--------------+---------+----------+-------+--------------+

   
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

It seems the businesses with higher rate are located more to the north than the business with lower rate.
But when check on the map, they lovated pretty close to each other.
So, location seems not to be an key factor that affect their ratings.

+---------+---------+----------+-------+----------+-----------+
| name    | city    | category | stars | latitude | longitude |
+---------+---------+----------+-------+----------+-----------+
| Loblaws | Toronto | Food     |   2.5 |  43.6551 |  -79.4494 |
+---------+---------+----------+-------+----------+-----------+

+--------------+---------+----------+-------+----------+-----------+
| name         | city    | category | stars | latitude | longitude |
+--------------+---------+----------+-------+----------+-----------+
| Cabin Fever  | Toronto | Food     |   4.5 |  43.6553 |  -79.4567 |
| Halo Brewery | Toronto | Food     |   4.0 |  43.6618 |  -79.4466 |
+--------------+---------+----------+-------+----------+-----------+



SQL code used for analysis:

************************************************
i:

SELECT
H.hours
,B.stars
,COUNT(H.hours) AS count
FROM business B 
INNER JOIN hours H
ON B.id = H.business_id
INNER JOIN category C
ON B.id = C.business_id
WHERE (B.stars BETWEEN 2 AND 3 
      AND B.city = 'Toronto'
      AND C.category = 'Food')
GROUP BY hours
ORDER BY count
LIMIT 10
;

SELECT
H.hours
,B.stars
,COUNT(H.hours) AS count
FROM business B 
INNER JOIN hours H
ON B.id = H.business_id
INNER JOIN category C
ON B.id = C.business_id
WHERE (B.stars BETWEEN 4 AND 5
      AND B.city = 'Toronto'
      AND C.category = 'Food')
GROUP BY hours
ORDER BY count
LIMIT 10
;

**********************************************
ii:

SELECT
B.name
,B.city
,C.category
,B.stars
,B.review_count
FROM business B 
INNER JOIN category C
ON B.id = C.business_id
WHERE (B.stars BETWEEN 2 AND 3
      AND B.city = 'Toronto'
      AND C.category = 'Food')
LIMIT 10
;

SELECT
B.name
,B.city
,C.category
,B.stars
,B.review_count
FROM business B 
INNER JOIN category C
ON B.id = C.business_id
WHERE (B.stars BETWEEN 4 AND 5
      AND B.city = 'Toronto'
      AND C.category = 'Food')
LIMIT 10
;

*************************************************
iii:

SELECT
B.name
,B.city
,C.category
,B.stars
,B.latitude
,B.longitude
FROM business B 
INNER JOIN category C
ON B.id = C.business_id
WHERE (B.stars BETWEEN 4 AND 5
      AND B.city = 'Toronto'
      AND C.category = 'Food')
LIMIT 10
;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		

i. Difference 1:

Business that still open(3.7） have higher average stars than business that is not open(3.5) now.         
         
ii. Difference 2:
         
Business that still open(32） have higher average reviews than business that is not open(23) now.         

+---------+---------------+---------------------+
| is_open |  AVG(B.stars) | AVG(B.review_count) |
+---------+---------------+---------------------+
|       1 | 3.67900943396 |       31.7570754717 |
+---------+---------------+---------------------+

+---------+---------------+---------------------+
| is_open |  AVG(B.stars) | AVG(B.review_count) |
+---------+---------------+---------------------+
|       0 | 3.52039473684 |       23.1980263158 |
+---------+---------------+---------------------+  
         
SQL code used for analysis:

SELECT
is_open
,AVG(B.stars)
,AVG(B.review_count)
FROM business B 
WHERE (B.is_open = 1)
LIMIT 10
;

SELECT
is_open
,AVG(B.stars)
,AVG(B.review_count)
FROM business B 
WHERE (B.is_open = 0)
LIMIT 10
;
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
Is business with higher number of photo will also have higher number of review?
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

Number of review that each business have and number of photo that each business have.
So, I will use data from the business table and the photo table.                           
                  
iii. Output of your finished dataset:

Top-10 review_count list
+------------------------+--------------+--------------+
| name                   | review_count | num_of_photo |
+------------------------+--------------+--------------+
| The Buffet             |         3873 |           19 |
| Schwartz's             |         1757 |            5 |
| Joe's Farm Grill       |         1549 |            4 |
| Carson Kitchen         |         1410 |           15 |
| Delmonico Steakhouse   |         1389 |            6 |
| Le Thai                |         1252 |            3 |
| Scarpetta              |         1116 |            3 |
| Diablo's Cantina       |         1084 |            3 |
| Joyride Taco House     |          902 |            1 |
| Yonaka Modern Japanese |          864 |           11 |
+------------------------+--------------+--------------+

Top-10 number of photo list
+------------------------+--------------+--------------+
| name                   | review_count | num_of_photo |
+------------------------+--------------+--------------+
| The Buffet             |         3873 |           19 |
| Carson Kitchen         |         1410 |           15 |
| Picasso                |          758 |           12 |
| Rose. Rabbit. Lie      |          681 |           12 |
| Yonaka Modern Japanese |          864 |           11 |
| Herringbone            |          304 |            7 |
| Miku Toronto           |          384 |            7 |
| Rosallie               |          216 |            7 |
| Delmonico Steakhouse   |         1389 |            6 |
| Schwartz's             |         1757 |            5 |
+------------------------+--------------+--------------+         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
B.name
,B.review_count
,COUNT(P.id) AS num_of_photo
FROM PHOTO P
INNER JOIN business B
ON B.id = P.business_id
GROUP BY business_id
ORDER BY B.review_count DESC
LIMIT 10
;

SELECT 
B.name
,B.review_count
,COUNT(P.id) AS num_of_photo
FROM PHOTO P
INNER JOIN business B
ON B.id = P.business_id
GROUP BY business_id
ORDER BY num_of_photo DESC
LIMIT 10
;
